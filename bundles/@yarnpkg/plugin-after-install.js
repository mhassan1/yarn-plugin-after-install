/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-after-install",
factory: function (require) {
"use strict";var plugin=(()=>{var s=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var I=Object.getOwnPropertyNames;var x=Object.prototype.hasOwnProperty;var a=(t=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(t,{get:(o,e)=>(typeof require<"u"?require:o)[e]}):t)(function(t){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+t+'" is not supported')});var C=(t,o)=>{for(var e in o)s(t,e,{get:o[e],enumerable:!0})},y=(t,o,e,n)=>{if(o&&typeof o=="object"||typeof o=="function")for(let r of I(o))!x.call(t,r)&&r!==e&&s(t,r,{get:()=>o[r],enumerable:!(n=g(o,r))||n.enumerable});return t};var h=t=>y(s({},"__esModule",{value:!0}),t);var P={};C(P,{default:()=>k});var d=a("@yarnpkg/core");var f=a("@yarnpkg/core"),c={afterInstall:{description:"Hook that will always run after install",type:f.SettingsType.STRING,default:""},afterInstallMode:{description:'Mode for the afterInstall hook. Can be "always" or "persist-only"',type:f.SettingsType.STRING,default:"always"}};var m=a("clipanion"),u=a("@yarnpkg/core");var p=a("@yarnpkg/shell"),l=async(t,o)=>{let e=t.get("afterInstall"),n=!!t.projectCwd?.endsWith(`dlx-${process.pid}`);return e&&!n?(o&&console.log("Running `afterInstall` hook..."),(0,p.execute)(e,[],{cwd:t.projectCwd||void 0})):0};var i=class extends m.Command{async execute(){let o=await u.Configuration.find(this.context.cwd,this.context.plugins);return l(o,!1)}};i.paths=[["after-install"]];var w={configuration:c,commands:[i],hooks:{afterAllInstalled:async(t,o)=>{let e=t.configuration.get("afterInstallMode");if(o?.mode===d.InstallMode.UpdateLockfile||o?.persistProject===!1&&e==="persist-only")return;if(await l(t.configuration,!0))throw new Error("The `afterInstall` hook failed, see output above.")}}},k=w;return h(P);})();
return plugin;
}
};
